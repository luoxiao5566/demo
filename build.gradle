plugins {
	id 'org.springframework.boot' version '2.5.9'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.thoughtworks.mall'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url 'https://maven.aliyun.com/repository/public' }
	maven { url 'https://maven.aliyun.com/repository/spring/'}
	mavenLocal()
	mavenCentral()
}

if (buildStage()) {
	apply from: "${rootProject.projectDir}/gradle/checkstyle.gradle"
	apply from: "${rootProject.projectDir}/gradle/git-hooks.gradle"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql:42.2.2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

def buildStage() {
	String isBuildStage = System.getProperty("buildStage")
	print "property isBuildStage=${isBuildStage}"
	def b = isBuildStage == null || Boolean.valueOf(isBuildStage)
	print "final isBuildStage=${b}"
	return b
}
